=== ./__manifest__.py ===
{
    'name': 'Price Batch Control',
    'version': '18.0.1.0.0',
    'category': 'Sales',
    'summary': 'Manage product price changes in batch from purchase orders',
    'author': 'Mahmoud Osama - Maxmatech',
    'website': 'http://www.maxmatech.com',
    'license': 'LGPL-3',
    'depends': ['base', 'sale_management', 'purchase', 'mail'],
    'data': [
        'security/security.xml',
        'security/ir.model.access.csv',
        'data/price_batch_sequence.xml',
        'views/price_batch_views.xml',
    ],
    'installable': True,
    'application': True,
    'auto_install': False,
}

=== ./security/security.xml ===
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <record id="group_price_batch_user" model="res.groups">
        <field name="name">Price Batch / User</field>
        <field name="category_id" ref="base.module_category_hidden"/>
    </record>

    <record id="group_price_batch_manager" model="res.groups">
        <field name="name">Price Batch / Manager</field>
        <field name="category_id" ref="base.module_category_hidden"/>
        <field name="implied_ids" eval="[(4, ref('group_price_batch_user'))]"/>
    </record>
</odoo>

=== ./security/ir.model.access.csv ===
id,name,model_id:id,group_id:id,perm_read,perm_write,perm_create,perm_unlink
access_price_batch_user,price.batch.control.user,model_price_batch_control,group_price_batch_user,1,1,1,0
access_price_batch_manager,price.batch.control.manager,model_price_batch_control,group_price_batch_manager,1,1,1,1

=== ./data/price_batch_sequence.xml ===
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data noupdate="1">
        <record id="seq_price_batch_control" model="ir.sequence">
            <field name="name">Price Batch Control</field>
            <field name="code">price.batch.control</field>
            <field name="prefix">PBC/</field>
            <field name="padding">5</field>
            <field name="company_id" eval="False"/>
        </record>
    </data>
</odoo>

=== ./models/__init__.py ===
from . import price_batch

=== ./models/price_batch.py ===
from odoo import api, fields, models
from odoo.exceptions import UserError

class PriceBatchControl(models.Model):
    _name = 'price.batch.control'
    _description = 'Price Batch Control'
    _inherit = ['mail.thread', 'mail.activity.mixin']

    name = fields.Char(string='Reference', required=True, readonly=True, default=lambda self: 'New', tracking=True)
    date = fields.Datetime(string='Change Date', default=fields.Datetime.now, tracking=True)
    state = fields.Selection([
        ('draft', 'Draft'),
        ('pending', 'Pending'),
        ('approved', 'Approved')
    ], default='draft', tracking=True)
    change_type = fields.Selection([
        ('percentage', '%'),
        ('fixed', 'Fixed')
    ], required=True, default='percentage', tracking=True)
    change_value = fields.Float(string='Value', required=True, tracking=True)
    purchase_order_ids = fields.Many2many('purchase.order', string='Purchase Orders', tracking=True)
    product_ids = fields.Many2many('product.product', string='Products', compute='_compute_products', store=True)

    @api.depends('purchase_order_ids')
    def _compute_products(self):
        for record in self:
            products = record.purchase_order_ids.mapped('order_line.product_id')
            record.product_ids = [(6, 0, products.ids)]

    @api.model_create_multi
    def create(self, vals_list):
        for vals in vals_list:
            if vals.get('name') == 'New':
                vals['name'] = self.env['ir.sequence'].next_by_code('price.batch.control') or 'New'
        return super().create(vals_list)

    def action_to_pending(self):
        self._filtered_access()
        for record in self:
            if not record.purchase_order_ids:
                raise UserError('Please select at least one purchase order.')
        self.write({'state': 'pending'})

    def action_approve(self):
        self._filtered_access()
        for record in self:
            if record.state != 'pending':
                raise UserError('Only pending requests can be approved.')
            if record.change_type != 'percentage':
                raise UserError('Only percentage changes are allowed.')
            
            for product in record.product_ids:
                new_price = product.standard_price * (1 + record.change_value / 100)
                product.write({'standard_price': new_price})
            record.write({'state': 'approved'})

    def _filtered_access(self):
        if not self.env.user.has_group('price_batch_control.group_price_batch_manager'):
            raise UserError('Only managers can perform this action.')

=== ./views/price_batch_views.xml ===
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <record id="view_price_batch_form" model="ir.ui.view">
        <field name="name">price.batch.control.form</field>
        <field name="model">price.batch.control</field>
        <field name="arch" type="xml">
            <form>
                <header>
                    <button name="action_to_pending" string="Submit" type="object" class="oe_highlight" states="draft"/>
                    <button name="action_approve" string="Approve" type="object" class="oe_highlight" states="pending"/>
                    <field name="state" widget="statusbar" statusbar_visible="draft,pending,approved"/>
                </header>
                <sheet>
                    <div class="oe_title">
                        <h1><field name="name"/></h1>
                    </div>
                    <group>
                        <group>
                            <field name="date"/>
                            <field name="change_type"/>
                            <field name="change_value"/>
                        </group>
                    </group>
                    <notebook>
                        <page string="Purchase Orders">
                            <field name="purchase_order_ids" domain="[('state', 'in', ['purchase', 'done'])]"/>
                        </page>
                        <page string="Products">
                            <field name="product_ids" readonly="1"/>
                        </page>
                    </notebook>
                </sheet>
                <chatter/>
            </form>
        </field>
    </record>

    <record id="view_price_batch_list" model="ir.ui.view">
        <field name="name">price.batch.control.list</field>
        <field name="model">price.batch.control</field>
        <field name="arch" type="xml">
            <tree>
                <field name="name"/>
                <field name="date"/>
                <field name="change_type"/>
                <field name="change_value"/>
                <field name="state"/>
            </tree>
        </field>
    </record>

    <record id="action_price_batch" model="ir.actions.act_window">
        <field name="name">Price Batch Control</field>
        <field name="res_model">price.batch.control</field>
        <field name="view_mode">list,form</field>
    </record>

    <menuitem id="menu_price_batch" 
              name="Price Batch Control" 
              action="action_price_batch" 
              parent="purchase.menu_purchase_root" 
              sequence="20"/>
</odoo>

=== ./__init__.py ===
from . import models